This paper introduces a logic (PAMC) for reasoning about stochastic multi-agent
systems.

The logic is an extension of Kozen's mu-calculus MC by probabilistic operators
and alternation. 

The paper is theoretical. It's main results are 
- upper bounds on the model-checking problem for PAMC and two of its "vanilla"
  fragments, with respect to various types of strategies, i.e., randomised
  memoryfull and deterministic memoryless.
- indications that PAMC subsumes related logics, e.g., (P)ATL(*), probabilisitc
  mu-calculus PMC, alternating mu-calculus AMC.

The authors suggest that PAMC has the following advantages over other logics:
- the semantics are suited to multi-agent systems (rather than single-agent
  systems as for PCTL*),
- the logic subsumes the mu-calculus and thus can express parity conditions
  (e.g., "the probability that phi holds at every even position is at least c",
  that can't be expressed in, e.g., PATL*).

The paper is not ready to be published. It's major shortcomings are that
- it lacks good motivation for introducing another probabilistic logic, 
- the related work is poorly discussed: it misses some important work and
  includes much extraneous work,
- only basic/easy results are given, and there is no mention of other important
  issues such as lower-bounds on the model-checking problems, or the cost of the
  translations from other logics into PAMC.

Summary of content
------------------
Probabilistic operators in PAMC are of the form: "the agents in A have actions
so that for all actions of agents not in A, the probability that the resulting
play satisfies Psi is greater than (or equal to) c".

The semantics of PAMC is given in terms of "Probabilistic Concurrent Game
Structures", i.e., MDPs with edges labeled by a tuple of actions, one for each
agent.

The two fragments, (unfortunately called) PAMC_1 and PAMC_0, are formed by
restricting the path formulas: PAMC_1 is the "vanilla" fragment, i.e., every
probabilistic operator is immediately followed by a temporal operator (X,U,R),
and PAMC_0 is similar but further disallows U and R.

The main results are:
Result 1. model checking PAMC wrt memoryfull randomised strategies of PAMC is in 2NEXPTIME.
Result 2. model checking PAMC wrt deterministic memoryless strategies of PAMC is in 2EXPTIME.
Result 3. model checking PAMC_1 (wrt all types of strategies) is in (UP \cap co-UP)^(NP \cap co-NP).
Result 4. model checking PAMC_0 wrt memoryfull randomised strategies is in UP \cap co-UP.
Result 5. PAMC subsumes the alternating mu-calculus (AMC), the probabilistic
mu-calculus (PMC), and a variety of other logics.


Comments to Authors
-------------------

My feeling is that this paper is a first step. Much work is required to ready it
for a top AI conference.

The title should better describe the paper. Perhaps "Model-checking
Probabilistic Alternating-Time \mu-calculus" is more accurate (indeed, the paper
does not deal with satisfiability, bisimulations, axiomatisations, etc.).

1. The logic PAMC is not sufficiently justified. 

- The semantics include state and path formulas, and fixpoint operators appear
  in both types. This is not particularly elegant. Is there a good reason for
  this? The mu-calculus, as well as some probabilistic extensions, e.g., P\muTL
  (Liu, Song, Wang, Zhang 15), have only one type of formula. 
- The comparison of PAMC with the \mu^p-calculus of (Castro, Kilmurray, Piterman
  15) is not clear. Although the latter paper only studies their logic on Markov
  Chains, they also state: "All the results we presented above generalize to
  MDPs. There are no additional technical difficulties in carrying the proofs
  over." Given this is true (and if not, this should be mentioned), what is the
  exact relationship between PAMC and \mu^p-calculus? Note that the fact that
  \mu^p-calculus is not explicitly alternating is not a real drawback...
  alternation can easily be encoded by introducing additional atoms to code for
  agent actions (the same trick shows that the alternating mu-calculus and the
  mu-calculus are interreducible).
- There is a shortage of example formulas illustrating PAMC.

2. The related work is poorly discussed.

I'm sure the authors appreciate that there is a "zoo" of probabilistic logics.
This makes it hard to appreciate the relative pros and cons of PAMC with respect
to the literature. Moreover, the submission does not shine much light on the
matter, and the light it does shine is weak. E.g., In order to place PAMC in
context, I spent too much time drawing the missing tables/diagrams comparing
PAMC wrt expressive power and model-checking complexity.

- The following important work on probabilistic extensions of mu-calculus are
  not cited at all.

M. Mio. Game Semantics for Probabilistic μ-Calculi. PhD thesis, University of Edinburgh, 2012.
M. Mio and A. Simpson. Łukasiewicz μ-calculus. In FICS, 2013.
A. McIver and C. Morgan. Results on the quantitative μ-calculus qMμ. In TOCL, 2007.

In particular, you should discuss why you define the semantics of PAMC to be qualitative
(i.e., ||phi||: S \to {0,1}), rather than quantitative (i.e., ||phi||:S \to [0,1]).

- The following papers are cited and briefly discussed in the related work. 
However their relevance and connection with PAMC is not discussed at all.

(van der Hoek and Wooldridge 02)
(Bourahla and Benmonhamed 05)
(Mogavero, Murano, Vardi 10)
(Cermak, Lomuscio, Murano 15)
(Mogavero, Murano, Saurio 13, 14)
(Mogavero et al 14)
(Henzinger and Prabhu 06)
(Brihaye et al 07)
(Murano and Perelli 15)
(Chen, Song, Wu 16a, 16b)

- The original ATL paper is cited twice. Is there a good reason for this?

3. Only basic results are given.

- Indeed, the proofs are standard and rely on the translation of MC formulas to
deterministic parity games (Dax 06, Piterman 07) and the fact that solving
stochastic parity games is in NP \cap co-NP (Chatterjee, Jurdzinski, Henzinger
04).  

- Lower-bounds should be established or, at the very least, discussed. 

Other comments
--------------
Intro
- MAS are not neccesarily "computerized".
- The ATL paper can hardly came out "recently".
- The fact that PATL* MC is undecidable with incomplete information already holds for ATL*. The sentence should reflect this.
- You should justify why the example "probability of p on every even position ..." is interesting.
- bisimulations are not "contained in" a logic

Dfns
- The definition of memoryless is not quite right since \pi \in Q+ (not Q*).
- The definition of the probability space is not quite right since Cyl_q^.. is not a \sigma-algebra.
- In the semantics of the probabilistic operator the \rho in "||\psi||^\G,\rho" should be "w".
- Then, "given an omega-word w = ... 2^\AP", the "\AP" should be Q.

I can't parse the sentence "Given a path rho and a path formula psi" (top of pg 4).

The section on deterministic parity automata needs a brief introduction, and a 
better home than where it is now.

The notation of \G_\psi should be improved.
e.g., G should be the state set of \G and Q should be the state set of the DPA.
Then g is a state of a game and q of an automaton.

Related work
- The MC problem for strategy logic is not undecidable (although satisfiability is).

----
I would like to open a short discussion about this paper.

My main criticism was that the authors introduce yet another probabilistic logic, whose benefit, over existing logics, is not clear. 

The authors responded that existing probabilistic logics lack alternation. The authors supply an example of a formula that they claim cannot be expressed in the previous logics, and they state that the "\mu^p-calculus cannot express **cooperation** between agents".

It is not true that the \mu^p-calculus cannot express cooperation between agents. Model checking alternating mu-calculus can easily be reduced to model checking (ordinary) mu-calculus (e.g., push labels on an edge into the labeling of the target). The same trick can be used to express co-operation in the \mu^p-calculus. Moreover, this trick works for the formula they supply since <<system_agent>> is immediately followed by X.


