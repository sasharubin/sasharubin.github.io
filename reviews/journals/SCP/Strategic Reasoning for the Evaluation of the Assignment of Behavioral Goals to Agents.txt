This is a review of "Strategic Reasoning for the Evaluation of the
Assignment of Behavioral Goals to Agents" by Christophe Chareton,
Julien Brunel, David Chemouil.

SUMMARY OF CONTENT
This paper is about deciding if a given assignment of goals to agents
in a multi-agent system is "good". 

The multi-agent systems (MAS) is described using the introduced
temporal logic LTL_Kore (a variation of LTL which allows finite
traces, and whose atoms are linear-arithmetic expressions over integer
variables).  The MAS is made up of a variation on the usual
components: a formula defining the initial situation, global
invariants, preconditions and post-conditions (in the form of
"transition context properties" and "agent capabilities"). This is
done in Section 2.

In section 3 four correctness conditions (i.e., notions of "good
assignment") are proposed, including
- local correctness: for every goal g, the assigned agents A_g have a
  joint-strategy that ensures g, no matter what the agents outside the
  coalition do,
- global correctness: there is a single joint strategy such that every
  goal g is enforced by the coalition A_g, no matter what the agents
  outside the coalition do (in particular, if there is an environment
  agent, then this says that the environment collaborates with all the
  coalitions), 
- and two other conditions that involve some sort of collaboration
  between agents and are harder to express in words.

In section 4 the paper recalls a logic with decidable model-checking,
called USL (updateable strategy logic) previously studied by the
authors (Chareton et. al. 2015b). The main features of USL (over other
strategic logics) are that 
- like SL (and unlike ATL*) one can quantify over strategies, and bind
  the same strategy to different agents,
- unlike even SL agents can update their strategies without revoking
  them.  

The paper gives a translation of the Kore model to the models used by
USL (i.e., concurrent game structures).  This is done in Section 5.

The paper translates the correctness conditions into USL, and compares
these conditions to one another.  This is done in Section 6.

The paper includes a running example involving one agent (the
provider) supplying resources to two other agents (the clients).

ASSESSMENT
On the plus side: 

I appreciated the modeling of MAS by LTL_Kore formulas. The advantage
of LTL_KORE over say, LTL, is that the atoms are arithmetic
expressions, and thus one can model MAS in which agents
consume/produce resources.  I think this choice of modeling language
has a lot of potential.  Also, the use of USL for modeling correctness
properties is interesting and novel, especially if these properties
cannot be expressed in other logics such as ATL*, SL, etc. The use of
the running example helped clarify some of the ideas in the paper.

On the negative side:

I have one very serious concern. The translation from LTL_Kore to CGS
is not discussed. For instance, no properties of the translation are
proved, and there is no discussion of why the translation is
reasonable.  The natural semantics for LTL_Kore would be to define a
model of the formula as a sequence of evaluations (of all the
variables in the formula) satisfying the formula (cf. [1]). However,
in this work a state is a (consistent) set of arithmetic expressions
from some finite set (i.e., each expression appears in the LTL_Kore
formula).  Thus, this is some sort of predicate abstraction of the set
of models of the formula (as defined above).  The exact nature of this
abstraction should be discussed, i.e., what properties does it
preserve? If the abstraction is not faithful/precise, then one needs
to argue that it *useful*. To summarise: the translation from LTL_Kore
to CGS implicitly provides a semantics for LTL_Kore formulas, and
arguments in favour of this semantics are needed.

There is much related work that should be discussed, compared, and
cited:
- LTL with arithmetic constraints similar to LTL_Kore have been
  studied.  e.g., LTL over atoms which are expressions from (Z,<,=)
  were studied in, e.g., [1]. 
- The idea of modeling a system with LTL-like formulas goes back to
  LTL reactive synthesis of Pnueli and others, see e.g., [2,3].
- The amount of collaboration between an agent and its environment is
  an active topic of study and debate, see e.g., [4].   
- Applying USL to LTL_Kore models should be compared with other 
  approaches to strategic reasoning with resource bounds, e.g., [5].

Finally, I feel that some of the correctness properties are natural,
while others are far less intuitive to me. Here are some question for
to consider:
- The robustness of the correctness properties is not argued. *In what
  situations are they relevant?* Perhaps more general scenarios in
  which a given correctness property might be useful are warranted. 
- Can the correctness properties be related to existing AI literature,
  e.g., on agent roles or agent collaboration in adversarial
  environments? 
- Finally, what is the advantage of formalising the intuitive
  correctness notions in USL and not, e.g., in ATL* or SL? What does
  one lose by not formalising these in a logic with updateable
  strategies?

DETAILED COMMENTS/ISSUES FOR THE AUTHORS
- spellcheck... existencial instanciating 
- Most of section 4 is copied, verbatim, from Chareton 2015b. This
  fact should be clearly stated.
- What does Kore stand for/denote?
- The abstract should be tightened.  e.g., The abstract suggests that
  you are addressing the problem of actually outputing a good
  assignment, given a description of the system and the set of
  possible goals.  However, in the "assignment problem" the assignment
  of agents to goals is part of the input, and the problem is to
  decide if this assignment is good. 
- mention \mathbb{N} includes 0.
- dfn 5, X case, "i" should be "1"
- example 1, the dfn of cons_c should be clearer.  indeed, the phrase
  "consumed at time t" is ambiguous. it could mean "consumed by time
  t" or "consumed in the transition from time t to t+1".
- why is example 1 called "CP1"? what is "CP" supposed to mean?
- fig 2: what graphical language is this? please cite.
- pg 6: "state s to state s'"... states have not been introduced
- pg 7 "if of a given size"
- i find the terminology "context properties" weak. i.e., the
  terminology does not give me a hint as to what objects it describes.
  also "multi-strategy" is fine, but why not "nondeterministic
  strategy" which, to me, gives a better idea what it refers to.
- pg 15, dfn 10: why is theta \cat \theta'_{\geq 1} a track?
- dfn 11: why is there a distinction betwee state and path formulas?
- the relationship between USL and SL could be mentioned and cited.
- pg 16, rem 3: "The semantics of the temporal operator X is less
  regular than in the usual framework with infinite executions: in
  particular, it does not commute with Â¬." if this is a limitation (is
  it?) why not add the "weak-next" operator as in the De Giacomo/Vardi
  paper you cite?
- dfn 21: in the binding case, replace "for any" by "for every". also,
  this should be commented on: you have an implicit universal
  quantification over free agents like in ATL.  
- dfn 31: A \binds \vec{x} is not defined. also, what is \vec{x}
  indexed by? can \vec{x} have more than one co-ordinate indexed by an
  agent a? 
- I think you should say something about the comparison between the
  various notions of correctness in some special cases, e.g., |G| = 1
  and G = |\Ag|.
- you should be clearer about why you need USL and not, e.g., SL. I
  guess that some of the correctness formulas can't be expressed in
  SL, but there should be at least a discussion about why formalising
  the informal descriptions of the correctness criteria can't be done
  in SL.

REFERENCES
[1] An automata-theoretic approach to constraint LTL, Demri, D'Souza,
I&C, 2007.

[2] On the synthesis of a reactive module, Pnueli, Rosner,
SIGPLAN-SIGACT, 1989. 

[3] Synthesis of reactive (1) designs.Bloem, et al. JCSS 2012.

[4] How to Handle Assumptions in Synthesis. Bloem, et al. SYNT 2014.

[5] Model-Checking for Resource-Bounded ATL with Production and
Consumption of Resources. Alechina et. al., JCSS, 2017

